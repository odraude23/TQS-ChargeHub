version: '3.8'
name: ChargeHub

services:
  mysqldb:
    image: mysql:8.0
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
      - MYSQL_USER=$MYSQLDB_USER
      - MYSQL_PASSWORD=$MYSQLDB_PASSWORD
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQLDB_USER}", "-p${MYSQLDB_PASSWORD}"]
      interval: 1s
      timeout: 5s
      retries: 20
    networks:
      - chargehub-network

  backend:
    build: ./backend
    image: backend
    container_name: backend
    restart: on-failure
    env_file: ./.env
    depends_on:
      mysqldb:
        condition: service_healthy
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
              "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
              "spring.datasource.username" : "$MYSQLDB_USER",
              "spring.datasource.password" : "$MYSQLDB_PASSWORD",
              "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQLDialect",
              "spring.jpa.hibernate.ddl-auto" : "update",
              "management.endpoint.health.show-details": "always",
              "management.endpoint.health.access": "unrestricted",
              "management.endpoints.web.exposure.include": "health,info,metrics,prometheus",
              "management.endpoint.prometheus.show-details": "always",
              "management.endpoint.info.access": "unrestricted",
              "management.endpoint.info.show-details": "always",
              "management.endpoint.metrics.access": "unrestricted",
              "management.endpoint.metrics.show-details": "always",
              "management.endpoint.prometheus.enabled": "true",
              "management.metrics.export.prometheus.enabled": "true",
              "springdoc.swagger-ui.path":"/swagger-ui-custom.html",
              "springdoc.api-docs.path": "/api-docs",
              "stripe.api-key": "$STRIPE_API"
            }'
    volumes:
      - ./backend:/app
    networks:
      - chargehub-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  frontend:
    build:
      context: ./frontend/ChargeHub
      dockerfile: Dockerfile.prod
    image: frontend
    container_name: frontend
    restart: on-failure
    env_file: ./.env
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - VITE_HOST=deti-tqs-23.ua.pt
      - VITE_PORT=3000   
    ports:
      - "3000:3000"
    networks:
      - chargehub-network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - chargehub-network

  grafana:
    image: grafana/grafana
    ports:
      - "4000:3000"
    depends_on:
      prometheus:
        condition: service_started
      backend:
        condition: service_healthy
    networks:
      - chargehub-network
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_SERVER_ROOT_URL=http://deti-tqs-23.ua.pt:4000/
      - GF_SERVER_HTTP_PORT=3000

networks:
  chargehub-network:
    driver: bridge
 
volumes:
  db:
  grafana-storage: